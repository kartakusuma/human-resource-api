{
    "swagger": "2.0",
    "info": {
        "description": "A REST API for Human Resource Information System using Gin, GORM, and MySQL",
        "title": "Human Resource API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/departments": {
            "get": {
                "description": "Get all departments",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "department"
                ],
                "summary": "Get all departments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DepartmentResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Store a new department in database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "department"
                ],
                "summary": "Store a department",
                "parameters": [
                    {
                        "description": "Store a department",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DepartmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DepartmentResponse"
                        }
                    }
                }
            }
        },
        "/departments/{departmentID}": {
            "get": {
                "description": "Get a department by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "department"
                ],
                "summary": "Get a department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Get a department by ID",
                        "name": "departmentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DepartmentResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a department in database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "department"
                ],
                "summary": "Update a department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Update a department by ID",
                        "name": "departmentID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update a department by ID",
                        "name": "department",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.DepartmentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DepartmentResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a department in database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "department"
                ],
                "summary": "Destroy a department",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delete a department by ID",
                        "name": "departmentID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.DepartmentResponse"
                        }
                    }
                }
            }
        },
        "/employees": {
            "get": {
                "description": "Get all employees",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Get all employees",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EmployeeResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Store a new employee in database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Store an employee",
                "parameters": [
                    {
                        "description": "Store an employee",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EmployeeResponse"
                        }
                    }
                }
            }
        },
        "/employees/{employeeID}": {
            "get": {
                "description": "Get an employee by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Get an employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Get an employee by ID",
                        "name": "employeeID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EmployeeResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an employee in database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Update an employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Update an employee by ID",
                        "name": "employeeID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update an employee by ID",
                        "name": "employee",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EmployeeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EmployeeResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a employee in database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "employee"
                ],
                "summary": "Destroy an employee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Delete an employee by ID",
                        "name": "employeeID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EmployeeResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.DepartmentRequest": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.DepartmentResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.EmployeeRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "department_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "integer"
                },
                "picture": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                }
            }
        },
        "models.EmployeeResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "department_id": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "integer"
                },
                "picture": {
                    "type": "string"
                },
                "sex": {
                    "type": "string"
                }
            }
        }
    }
}